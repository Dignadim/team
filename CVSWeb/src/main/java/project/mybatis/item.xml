<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="project.item.ItemVO">

	<!-- id: sql 명령을 식별한다. -->
	<!-- parameterType: sql 명령으로 전달되는 데이터의 타입을 적는다. -->
	<!-- resultType: sql 명령 실행결과 리턴되는 데이터의 타입을 적는다. -->
	
	<!-- 상품 1건을 저장한다. -->
	<insert id="itemInsert" parameterType="item_vo">
		insert into item (idx, category, itemname, itemprice, hit, sellCVS, averscore, eventType, itemImage) values (item_idx_seq.nextval, #{category}, #{itemName}, #{itemPrice}, #{hit}, #{sellCVS}, #{averscore}, #{eventType}, #{itemImage})
	</insert>

	<!-- 모든 글을 얻어온다. -->
	<select id="selectItems" resultType="item_vo">
	 	select * from item order by idx desc
	</select>
	
	<!-- 특정 카테고리인 아이템만 얻어온다. -->
	<select id="selectItemCate" parameterType="String" resultType="item_vo">
	 	select * from item where trim(category) = #{cate}
	</select>
	
	<!-- 모든 글의 개수를 얻어온다. -->
	<select id="selectItemCount" resultType="int">
		select count(*) from item
	</select>	 
	 
	 <!-- 1페이지 분량의 상품 목록을 얻어온다. -->
	 <select id="selectItemList" parameterType="java.util.HashMap" resultType="item_vo">
	 	<![CDATA[
			select * from (
				select rownum rnum, TT.* from (
					select * from item order by idx desc 
				) TT where rownum <= #{endNo}
			) where rnum >= #{startNo} 		
		]]>
	 </select>
	
	<!-- 상품 1건을 얻어온다. -->	 
	 <select id="itemSelectByIdx" parameterType="int" resultType="item_vo">
	 	select * from item where idx = #{idx}
	 </select>
	
	 <!-- 조회수를 증가시킨다. -->
	 <update id="itemIncrement" parameterType="int">
	 	update item set hit = hit + 1 where idx = #{idx}
	 </update>
	 
	 <!-- 상품 1건을 수정한다. -->
	 <update id="itemUpdate" parameterType="item_vo">
	 	update item set itemname = #{itemName}, itemprice = #{itemPrice}, itemimage = #{itemImage}, category = #{category}, sellCVS = #{sellCVS}, eventType = #{eventType} where idx = #{idx}
	 </update>
	 
	 <!-- 상품 1건을 삭제한다. -->	 
	 <delete id="itemDelete" parameterType="int">
	 	delete from item where idx = #{idx}
	 </delete>
	 
	  <!-- 조회수 순위별 상품 탑 5를 얻어온다. -->
	 <select id="selectItemTOP5" resultType="item_vo">
		<![CDATA[
	 		select * from item where rownum <= 5 order by hit desc, idx desc
	 	]]>
	 </select>
	 
	  <!-- 조회수 순위별 상품 탑을 넘겨받은 인수만큼 얻어온다. -->
	 <select id="selectItemTOP" resultType="item_vo" parameterType="int">
		<![CDATA[
	 		select * from(select * from item order by hit desc) where rownum <= #{count}
	 	]]>
	 </select>
	 
	 <select id="search" parameterType="String" resultType="item_vo">
	 	select * from item where itemname like '%' || #{itemName} || '%' order by idx desc
	 </select>	

	  <!-- 인기글 탑 3을 얻어온다. -->
	 <select id="selectFreeHitList" resultType="fb_vo">
		<![CDATA[
	 		select * from fb_board where rownum <= 3 order by fb_hit desc, fb_idx desc
	 	]]>	
	 </select>
	
	 <select id="categorySearch" parameterType="String" resultType="item_vo">
	 	select * from item where trim(category) like '%' || #{category} || '%' order by idx desc
	 </select>	
	
	 <select id="SellCVSSearch" parameterType="String" resultType="item_vo">
	 	select * from item where trim(sellCVS) like '%' || #{sellCVS} || '%' order by idx desc
	 </select>	

	 <select id="eventTypeSearch" parameterType="String" resultType="item_vo">
	 	select * from item where trim(eventType) like '%' || #{eventType} || '%' order by idx desc
	 </select>	

	 <select id="itemPriceSearch" parameterType="int" resultType="item_vo">
	 	<![CDATA[	
	 		select * from item where trim(itemPrice) <= #{itemPrice}  order by idx desc
	 	]]>		
	 </select>	

	<update id="averscoreUpdate" parameterType="item_vo">
		update item set averscore = #{averscore} where idx = #{idx}
	</update>

<insert id="insertUpdateScore" parameterType="item_ao">
		insert into itemavg (itemidx, averscore, avgindex, id) values (#{itemIdx}, #{updateScore}, itemavg_avgindex_seq.nextval, #{ID})
	</insert>

	<select id="selectNewAvg" parameterType="int" resultType="double">
		select avg(averscore) from itemavg where itemidx = #{idx}
	</select>

	<update id="UpdateScore" parameterType="item_ao">
		update item set averscore = #{newAvg} where idx = #{itemIdx}
	</update>

	<select id="selectAvgID" parameterType="int" resultType="String">
		select ID from itemavg where itemidx = #{idx} 
	</select>

	 <select id="selectEVList" resultType="ev_vo">
		<![CDATA[
			select * from ev_board where extract (month from ev_date) = extract (month from sysdate) and extract (year from ev_date) = extract (year from sysdate)
	 	]]>	
	 </select>
	 
</mapper>
































