<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.dao.ItemDAO">

	<!-- id: sql 명령을 식별한다. -->
	<!-- parameterType: sql 명령으로 전달되는 데이터의 타입을 적는다. -->
	<!-- resultType: sql 명령 실행결과 리턴되는 데이터의 타입을 적는다. -->
	
	<!-- 상품 1건을 저장한다. -->
	<insert id="itemInsert" parameterType="item_vo">
		insert into item (idx, category, itemname, itemprice, hit, sellCVS, averscore, eventType, itemimage, hashTag) values (item_idx_seq.nextval, #{category}, #{itemName}, #{itemPrice}, #{hit}, #{sellCVS}, #{averscore}, #{eventType}, #{itemImage}, #{hashTag})
	</insert>

	<!-- 모든 글을 얻어온다. -->
	<select id="selectItems" resultType="item_vo">
	 	select * from item order by idx desc
	</select>	

	<!-- 모든 신상품을 얻어온다. -->
	<select id="selectNewItems" resultType="item_vo">
	 	<![CDATA[
	 		select * from item where itemdate >= sysdate - 30 order by idx desc
	 	]]>
	</select>	
	
	<!-- 특정 카테고리인 아이템만 얻어온다. -->
	<select id="selectItemCate" parameterType="String" resultType="item_vo">
	 	select * from item where trim(category) = #{category}
	</select>
	
	<!-- 모든 상품의 개수를 얻어온다. -->
	<select id="selectItemCount" resultType="int">
		select count(*) from item
	</select>	 

	<!-- 신상품의 개수를 얻어온다. -->
	<select id="selectNewItemCount" resultType="int">
	 	<![CDATA[
			select count(*) from item where itemdate >= sysdate - 30
		]]>
	</select>	 
	 
	 <!-- 1페이지 분량의 상품 목록을 얻어온다. -->
	 <select id="selectItemList" parameterType="java.util.HashMap" resultType="item_vo">
	 	<![CDATA[
			select * from (
				select rownum rnum, TT.* from (
					select * from item order by idx desc 
				) TT where rownum <= #{endNo}
			) where rnum >= #{startNo} 		
		]]>
	 </select>
	
	<!-- 1페이지 분량의 신상품 목록을 얻어온다. -->
	<select id="selectNewItemList" parameterType="java.util.HashMap" resultType="item_vo">
	 	<![CDATA[
			select * from (
				select rownum rnum, TT.* from (
					select * from item where itemdate >= sysdate - 30 order by itemdate desc
				) TT where rownum <= #{endNo}
			) where rnum >= #{startNo} 		 		
		]]>
	</select>
	
	 <select id="selectItemListReverse" parameterType="java.util.HashMap" resultType="item_vo">
	 	<![CDATA[
			select * from (
				select rownum rnum, TT.* from (
					select * from item order by idx asc
				) TT where rownum <= #{endNo}
			) where rnum >= #{startNo} 		
		]]>
	 </select>
	
	 <select id="selectItemListHigher" parameterType="java.util.HashMap" resultType="item_vo">
	 	<![CDATA[
			select * from (
				select rownum rnum, TT.* from (
					select * from item order by itemPrice desc 
				) TT where rownum <= #{endNo}
			) where rnum >= #{startNo} 		
		]]>
	 </select>
	
	 <select id="selectItemListLower" parameterType="java.util.HashMap" resultType="item_vo">
	 	<![CDATA[
			select * from (
				select rownum rnum, TT.* from (
					select * from item order by itemPrice
				) TT where rownum <= #{endNo}
			) where rnum >= #{startNo} 		
		]]>
	 </select>
	 
	 <select id="selectItemListBetter" parameterType="java.util.HashMap" resultType="item_vo">
	 	<![CDATA[
			select * from (
				select rownum rnum, TT.* from (
					select * from item order by averscore desc 
				) TT where rownum <= #{endNo}
			) where rnum >= #{startNo} 		
		]]>
	 </select>
	
	 <select id="selectItemListWorse" parameterType="java.util.HashMap" resultType="item_vo">
	 	<![CDATA[
			select * from (
				select rownum rnum, TT.* from (
					select * from item order by averscore
				) TT where rownum <= #{endNo}
			) where rnum >= #{startNo} 		
		]]>
	 </select>
	 
	 <select id="isearch" parameterType="com.project.item.ItemParam" resultType="item_vo">
	 	<![CDATA[
			select * from (
				select rownum rnum, TT.* from (
				 	select * from item where itemname like '%' || #{value} || '%' order by idx desc
				) TT where rownum <= #{endNo}
			) where rnum >= #{startNo} 		
		]]>	 	 	
	 </select>		
	<!-- 상품 1건을 얻어온다. -->	 
	 <select id="itemSelectByIdx" parameterType="int" resultType="item_vo">
	 	select * from item where idx = #{idx}
	 </select>
	
	 <!-- 조회수를 증가시킨다. -->
	 <update id="itemIncrement" parameterType="int">
	 	update item set hit = hit + 1 where idx = #{idx}
	 </update>
	 
	 <!-- 상품 1건을 수정한다. -->
	 <update id="itemUpdate" parameterType="item_vo">
	 	update item set itemname = #{itemName}, itemprice = #{itemPrice}, itemimage = #{itemImage}, category = #{category}, sellCVS = #{sellCVS}, eventType = #{eventType}, hashTag = #{hashTag} where idx = #{idx}
	 </update>
	 
	 <!-- 상품 1건을 삭제한다. -->	 
	 <delete id="itemDelete" parameterType="int">
	 	delete from item where idx = #{idx}
	 </delete>
	 
	  <!-- 조회수 순위별 상품 탑 5를 얻어온다. -->
	 <select id="selectItemTOP5" resultType="item_vo">
		<![CDATA[
	 		select * from(select * from item order by hit desc) where rownum <= 5
	 	]]>
	 </select>
	 
	 <!-- 현재 행사중인 상품을 최신순으로 10개만 얻어온다. -->
	 <select id="selectEventItemList" resultType="item_vo">
		<![CDATA[
		 	select * from(select * from item where extract (month from itemdate) = extract (month from sysdate) and extract (year from itemdate) = extract (year from sysdate) order by idx desc) where rownum <= 10
	 	]]>
	 </select>
	 
	  <!-- 조회수 순위별 상품 탑을 넘겨받은 인수만큼 얻어온다. -->
	 <select id="selectItemTOP" resultType="item_vo" parameterType="int">
		<![CDATA[
	 		select * from(select * from item order by hit desc) where rownum <= #{count}
	 	]]>
	 </select>
	 
	 <select id="search" parameterType="String" resultType="item_vo">
	 	select * from item where itemname like '%' || #{itemName} || '%' order by idx desc
	 </select>	
	 
	 <!-- 
	 	 <select id="search" parameterType="team.project.item.ItemParam" resultType="item_vo">
	 	<![CDATA[
			select * from (
				select rownum rnum, TT.* from (
				 	select * from item where itemname like '%' || #{value} || '%' order by idx desc
				) TT where rownum <= #{endNo}
			) where rnum >= #{startNo} 		
		]]>	 	 	
	 </select>	
	 
	  -->
	 

	  <!-- 인기글 탑 3을 얻어온다. -->
	 <select id="selectFreeHitList" resultType="fb_vo">
		<![CDATA[
			select * from(select * from fb_board order by fb_hit desc, fb_idx desc) where rownum <= 3
	 	]]>	
	 </select>


	 
	  <select id="hashTagSearch" parameterType="String" resultType="item_vo">
		<![CDATA[
	 		select * from(select * from item where trim(hashtag) like '%' || #{hashTag} || '%' order by dbms_random.value) where rownum <= 3
	 	]]>
	 </select>	
	 
	<select id="categorySearch" parameterType="itemParam" resultType="item_vo">
	 	<![CDATA[
			select * from (
				select rownum rnum, TT.* from (
				 	select * from item where trim(category) like '%' || #{value} || '%' order by idx desc
				) TT where rownum <= #{endNo}
			) where rnum >= #{startNo} 		
		]]>	 	
	 </select>	
	
	 <select id="SellCVSSearch" parameterType="itemParam" resultType="item_vo">
	 	<![CDATA[
			select * from (
				select rownum rnum, TT.* from (
				 	select * from item where trim(sellCVS) like '%' || #{value} || '%' order by idx desc
				) TT where rownum <= #{endNo}
			) where rnum >= #{startNo} 		
		]]>	 
	 </select>	

	 <select id="eventTypeSearch" parameterType="itemParam" resultType="item_vo">
	 	<![CDATA[
			select * from (
				select rownum rnum, TT.* from (
				 	select * from item where trim(eventType) like '%' || #{value} || '%' order by idx desc
				) TT where rownum <= #{endNo}
			) where rnum >= #{startNo} 		
		]]>	 	 	
	 </select>	

	 <select id="itemPriceSearch" parameterType="java.util.HashMap" resultType="item_vo">
	 	<![CDATA[
			select * from (
				select rownum rnum, TT.* from (
					select * from item where itemPrice <= #{itemPrice}  order by idx desc
				) TT where rownum <= #{endNo}
			) where rnum >= #{startNo} 		
		]]>	 	
	 </select>	
	 
	<update id="averscoreUpdate" parameterType="item_vo">
		update item set averscore = #{averscore} where idx = #{idx}
	</update>

	<insert id="insertUpdateScore" parameterType="item_ao">
		insert into itemavg (itemidx, averscore, avgindex, id) values (#{itemIdx}, #{updateScore}, itemavg_avgindex_seq.nextval, #{ID})
	</insert>

	<select id="selectNewAvg" parameterType="int" resultType="double">
		select avg(averscore) from itemavg where itemidx = #{idx}
	</select>

	<update id="UpdateScore" parameterType="item_ao">
		update item set averscore = #{newAvg} where idx = #{itemIdx}
	</update>

	<select id="selectAvgID" parameterType="item_ao" resultType="String">
		select ID from itemavg where itemidx = #{itemIdx} and id = #{ID}
	</select>

	 <select id="selectEVList" resultType="ev_vo">
		<![CDATA[
			select * from ev_board where extract (month from ev_date) = extract (month from sysdate) and extract (year from ev_date) = extract (year from sysdate)
	 	]]>	
	 </select>
	 
	 <!-- 평점 테이블에 있는 평점을 얻어온다. -->
	<select id="getRealAvg" parameterType="int" resultType="double">
		select AVG(averscore) from itemavg where itemidx = #{idx}
	</select>

	<select id="getAvgInfo" parameterType="int" resultType="item_ao">
		select * from itemavg where itemidx = #{idx}
	</select>


	<!-- 인기 검색어 기능 -->

	<!-- 검색어를 저장한다. -->
	<insert id="saveKeyword" parameterType="String">
		insert into searchkeyword (searchidx, keyword) values (searchkeyword_searchidx_seq.nextval ,#{itemName})
	</insert>    

	<!-- 인기 검색어를 얻어온다. -->
	<select id="selectHotKeyword" resultType="sk_vo">
		<![CDATA[
			select keyword from (
				select keyword, count(*) TT from searchkeyword group by keyword order by TT desc)
			where rownum <= 5
		]]>	 
	</select>

	<select id="getMaxIdx" resultType="int">
		select max(idx) from item
	</select>

	<!-- 상품 찜 기능 -->
	<!-- 상품을 찜한다. -->
	<insert id="setMyItem" parameterType="mi_vo">
		insert into myitem (id, itemidx) values (#{id}, #{itemIdx})
	</insert>

	<!-- 상품 찜을 취소한다. -->
	<insert id="cancelMyItem" parameterType="mi_vo">
		delete from myitem where id = #{id} and itemidx = #{itemIdx}
	</insert>

	<!-- 찜한 상품들의 idx를 가져온다. -->
	<select id="getMyItem" parameterType="String" resultType="mi_vo">
		select * from myitem where id = #{id}
	</select>

	<!-- 찜한 상품 목록을 가져온다. -->
	<select id="getMyItemList" parameterType="java.util.List" resultType="item_vo">
		select * from item where idx in
 		<foreach collection="list" index="index" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</select>
	
	<!-- 해당 상품을 찜한적 있는지 확인한다.-->
	<select id="isMyItem" parameterType="mi_vo" resultType="int">
		select count(*) from myitem where id = #{id} and itemidx = #{itemIdx}
	</select>

</mapper>










